{"ast":null,"code":"import React from'react';import'./NutrientSelector.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function NutrientSelector(_ref){let{nutrient,setNutrient,category}=_ref;const drinkOptions=['calories','total_fat','trans_fat','saturated_fat','sodium','carbohydrates','cholesterol','fiber','sugars','protein','vitaminA','vitaminC','calcium','iron','caffeine'];const foodOptions=['calories','total_fat','carbohydrates','fiber','protein'];const options=category==='food'?foodOptions:drinkOptions;return/*#__PURE__*/_jsx(\"div\",{className:\"nutrient-selector\",children:options.map(opt=>/*#__PURE__*/_jsxs(\"label\",{className:\"nutrient-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",value:opt,checked:nutrient===opt,onChange:e=>setNutrient(e.target.value)}),opt.replace(/_/g,' ').replace(/\\b\\w/g,l=>l.toUpperCase())]},opt))});}export default NutrientSelector;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","NutrientSelector","_ref","nutrient","setNutrient","category","drinkOptions","foodOptions","options","className","children","map","opt","type","value","checked","onChange","e","target","replace","l","toUpperCase"],"sources":["/Users/marlin/Desktop/Starbucks-Nutrition-Dashboard/src/components/nutrientselector/NutrientSelector.js"],"sourcesContent":["import React from 'react';\nimport './NutrientSelector.css';\n\nfunction NutrientSelector({ nutrient, setNutrient, category }) {\n    const drinkOptions = [\n        'calories',\n        'total_fat',\n        'trans_fat',\n        'saturated_fat',\n        'sodium',\n        'carbohydrates',\n        'cholesterol',\n        'fiber',\n        'sugars',\n        'protein',\n        'vitaminA',\n        'vitaminC',\n        'calcium',\n        'iron',\n        'caffeine',\n    ];\n\n    const foodOptions = [\n        'calories',\n        'total_fat',\n        'carbohydrates',\n        'fiber',\n        'protein',\n    ];\n\n    const options = category === 'food' ? foodOptions : drinkOptions;\n\n    return (\n        <div className=\"nutrient-selector\">\n            {options.map((opt) => (\n                <label key={opt} className=\"nutrient-option\">\n                    <input\n                        type=\"radio\"\n                        value={opt}\n                        checked={nutrient === opt}\n                        onChange={(e) => setNutrient(e.target.value)}\n                    />\n                    {opt.replace(/_/g, ' ').replace(/\\b\\w/g, (l) => l.toUpperCase())}\n                </label>\n            ))}\n        </div>\n    );\n}\n\nexport default NutrientSelector;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhC,QAAS,CAAAC,gBAAgBA,CAAAC,IAAA,CAAsC,IAArC,CAAEC,QAAQ,CAAEC,WAAW,CAAEC,QAAS,CAAC,CAAAH,IAAA,CACzD,KAAM,CAAAI,YAAY,CAAG,CACjB,UAAU,CACV,WAAW,CACX,WAAW,CACX,eAAe,CACf,QAAQ,CACR,eAAe,CACf,aAAa,CACb,OAAO,CACP,QAAQ,CACR,SAAS,CACT,UAAU,CACV,UAAU,CACV,SAAS,CACT,MAAM,CACN,UAAU,CACb,CAED,KAAM,CAAAC,WAAW,CAAG,CAChB,UAAU,CACV,WAAW,CACX,eAAe,CACf,OAAO,CACP,SAAS,CACZ,CAED,KAAM,CAAAC,OAAO,CAAGH,QAAQ,GAAK,MAAM,CAAGE,WAAW,CAAGD,YAAY,CAEhE,mBACIR,IAAA,QAAKW,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAC7BF,OAAO,CAACG,GAAG,CAAEC,GAAG,eACbZ,KAAA,UAAiBS,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eACxCZ,IAAA,UACIe,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEF,GAAI,CACXG,OAAO,CAAEZ,QAAQ,GAAKS,GAAI,CAC1BI,QAAQ,CAAGC,CAAC,EAAKb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE,CAChD,CAAC,CACDF,GAAG,CAACO,OAAO,CAAC,IAAI,CAAE,GAAG,CAAC,CAACA,OAAO,CAAC,OAAO,CAAGC,CAAC,EAAKA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,GAPxDT,GAQL,CACV,CAAC,CACD,CAAC,CAEd,CAEA,cAAe,CAAAX,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}