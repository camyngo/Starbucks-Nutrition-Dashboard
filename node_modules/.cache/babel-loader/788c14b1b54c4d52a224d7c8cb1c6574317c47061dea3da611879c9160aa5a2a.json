{"ast":null,"code":"var _jsxFileName = \"/Users/marlin/Desktop/Demeter/finalproject/starbucksnutritiondashboard/src/components/TopDrinks.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopDrinks({\n  category,\n  onDrinkSelect\n}) {\n  _s();\n  const [topDrinks, setTopDrinks] = useState([]);\n  useEffect(() => {\n    // ðŸ‘‡ Replace with real data loading later\n    const mockData = [{\n      Beverage: 'Java Chip Frappuccino',\n      Beverage_category: 'Drink',\n      Calories: 420\n    }, {\n      Beverage: 'White Chocolate Mocha',\n      Beverage_category: 'Drink',\n      Calories: 400\n    }, {\n      Beverage: 'Caramel Macchiato',\n      Beverage_category: 'Drink',\n      Calories: 250\n    }, {\n      Beverage: 'CaffÃ¨ Mocha',\n      Beverage_category: 'Drink',\n      Calories: 260\n    }, {\n      Beverage: 'CaffÃ¨ Latte',\n      Beverage_category: 'Drink',\n      Calories: 190\n    }, {\n      Beverage: 'Espresso',\n      Beverage_category: 'Drink',\n      Calories: 5\n    }];\n    const filtered = mockData.filter(d => d.Beverage_category.includes(category)).sort((a, b) => b.Calories - a.Calories).slice(0, 5);\n    setTopDrinks(filtered);\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top-drinks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Highest Calorie \", category, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drink-cards\",\n      children: topDrinks.map((drink, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drink-card\",\n        onClick: () => onDrinkSelect(drink.Beverage),\n        style: {\n          border: '1px solid #ccc',\n          padding: '10px',\n          margin: '5px',\n          borderRadius: '8px',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: drink.Beverage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [drink.Calories, \" cal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(TopDrinks, \"3JuY5mFFBhr+LIe3hV6FSf1yl/Y=\");\n_c = TopDrinks;\nexport default TopDrinks;\nvar _c;\n$RefreshReg$(_c, \"TopDrinks\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","TopDrinks","category","onDrinkSelect","_s","topDrinks","setTopDrinks","mockData","Beverage","Beverage_category","Calories","filtered","filter","d","includes","sort","a","b","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","drink","i","onClick","style","border","padding","margin","borderRadius","cursor","_c","$RefreshReg$"],"sources":["/Users/marlin/Desktop/Demeter/finalproject/starbucksnutritiondashboard/src/components/TopDrinks.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nfunction TopDrinks({ category, onDrinkSelect }) {\n    const [topDrinks, setTopDrinks] = useState([]);\n\n    useEffect(() => {\n        // ðŸ‘‡ Replace with real data loading later\n        const mockData = [\n            { Beverage: 'Java Chip Frappuccino', Beverage_category: 'Drink', Calories: 420 },\n            { Beverage: 'White Chocolate Mocha', Beverage_category: 'Drink', Calories: 400 },\n            { Beverage: 'Caramel Macchiato', Beverage_category: 'Drink', Calories: 250 },\n            { Beverage: 'CaffÃ¨ Mocha', Beverage_category: 'Drink', Calories: 260 },\n            { Beverage: 'CaffÃ¨ Latte', Beverage_category: 'Drink', Calories: 190 },\n            { Beverage: 'Espresso', Beverage_category: 'Drink', Calories: 5 },\n        ];\n\n        const filtered = mockData\n            .filter(d => d.Beverage_category.includes(category))\n            .sort((a, b) => b.Calories - a.Calories)\n            .slice(0, 5);\n\n        setTopDrinks(filtered);\n    }, [category]);\n\n    return (\n        <div className=\"top-drinks\">\n            <h3>Highest Calorie {category}s</h3>\n            <div className=\"drink-cards\">\n                {topDrinks.map((drink, i) => (\n                    <div\n                        key={i}\n                        className=\"drink-card\"\n                        onClick={() => onDrinkSelect(drink.Beverage)}\n                        style={{ border: '1px solid #ccc', padding: '10px', margin: '5px', borderRadius: '8px', cursor: 'pointer' }}\n                    >\n                        <strong>{drink.Beverage}</strong>\n                        <p>{drink.Calories} cal</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default TopDrinks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}