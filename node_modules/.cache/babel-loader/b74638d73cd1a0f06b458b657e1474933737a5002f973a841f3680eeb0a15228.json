{"ast":null,"code":"var _jsxFileName = \"/Users/marlin/Desktop/Demeter/finalproject/starbucksnutritiondashboard/src/components/bubblechart/BubbleChart.js\",\n  _s = $RefreshSig$();\n// src/components/bubblechart/BubbleChart.js\n\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { formatLabel } from '../../data/DrinkNutritionModel';\nimport './BubbleChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BubbleChart({\n  data,\n  nutrient,\n  category\n}) {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    // 1) Build an array of { category, avg } objects:\n    let categoryAverages;\n    if (data[0].category) {\n      // DRINKS: group by d.category\n      const grouped = d3.groups(data, d => d.category);\n      categoryAverages = grouped.map(([cat, items]) => {\n        const valid = items.filter(d => d[nutrient] !== undefined && !isNaN(d[nutrient]));\n        const avg = d3.mean(valid, d => +d[nutrient]);\n        return {\n          category: cat,\n          avg\n        };\n      }).filter(d => !isNaN(d.avg));\n    } else {\n      // FOOD: create a single “All Items” average\n      const valid = data.filter(d => d[nutrient] !== undefined && !isNaN(d[nutrient]));\n      const avg = d3.mean(valid, d => +d[nutrient]);\n      categoryAverages = [{\n        category: 'All Items',\n        avg\n      }];\n    }\n\n    // 2) Setup SVG (clear previous contents)\n    const svg = d3.select(ref.current);\n    svg.selectAll('*').remove();\n    const container = svg.node().parentElement;\n    const width = container.clientWidth;\n    const height = 300;\n\n    // 3) Scale bubble radius by avg value\n    const scale = d3.scaleSqrt().domain([0, d3.max(categoryAverages, d => d.avg)]).range([45, 70]);\n\n    // 4) Run a small force simulation to position bubbles\n    const simulation = d3.forceSimulation(categoryAverages).force('x', d3.forceX(width / 2).strength(0.05)).force('y', d3.forceY(height / 2 + 50).strength(0.1)).force('collide', d => d3.forceCollide(scale(d.avg) + 4)).stop();\n    for (let i = 0; i < 100; ++i) simulation.tick();\n\n    // 5) Draw each bubble + label\n    const g = svg.selectAll('g').data(categoryAverages).enter().append('g').attr('transform', d => `translate(${d.x},${d.y})`);\n    g.append('circle').attr('r', d => scale(d.avg)).attr('fill', '#00704A').attr('stroke', '#e76f51').attr('stroke-width', 1).attr('opacity', 0.85);\n    g.append('text').style('text-anchor', 'middle').style('font-size', d => `${Math.min(scale(d.avg) / 3, 12)}px`).style('fill', 'white').style('pointer-events', 'none').selectAll('tspan').data(d => {\n      // Split the category name into two‐word chunks for multiline:\n      const words = d.category.split(' ');\n      const lines = [];\n      for (let i = 0; i < words.length; i += 2) {\n        lines.push(words.slice(i, i + 2).join(' '));\n      }\n      return lines;\n    }).enter().append('tspan').attr('x', 0).attr('dy', (d, i) => `${i === 0 ? 0 : 1.2}em`).text(d => d);\n  }, [data, nutrient, category]);\n\n  // 6) Header text changes based on whether we’re showing drinks or food:\n  const headerText = category === 'drinks' ? `Average ${formatLabel(nutrient)} by Type of Drinks` : `Average ${formatLabel(nutrient)} for All Food Items`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bubble-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: headerText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(BubbleChart, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = BubbleChart;\nexport default BubbleChart;\nvar _c;\n$RefreshReg$(_c, \"BubbleChart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","formatLabel","jsxDEV","_jsxDEV","BubbleChart","data","nutrient","category","_s","ref","length","categoryAverages","grouped","groups","d","map","cat","items","valid","filter","undefined","isNaN","avg","mean","svg","select","current","selectAll","remove","container","node","parentElement","width","clientWidth","height","scale","scaleSqrt","domain","max","range","simulation","forceSimulation","force","forceX","strength","forceY","forceCollide","stop","i","tick","g","enter","append","attr","x","y","style","Math","min","words","split","lines","push","slice","join","text","headerText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/marlin/Desktop/Demeter/finalproject/starbucksnutritiondashboard/src/components/bubblechart/BubbleChart.js"],"sourcesContent":["// src/components/bubblechart/BubbleChart.js\n\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { formatLabel } from '../../data/DrinkNutritionModel';\nimport './BubbleChart.css';\n\nfunction BubbleChart({ data, nutrient, category }) {\n    const ref = useRef();\n\n    useEffect(() => {\n        if (!data || data.length === 0) return;\n\n        // 1) Build an array of { category, avg } objects:\n        let categoryAverages;\n        if (data[0].category) {\n            // DRINKS: group by d.category\n            const grouped = d3.groups(data, (d) => d.category);\n            categoryAverages = grouped\n                .map(([cat, items]) => {\n                    const valid = items.filter(\n                        (d) => d[nutrient] !== undefined && !isNaN(d[nutrient])\n                    );\n                    const avg = d3.mean(valid, (d) => +d[nutrient]);\n                    return { category: cat, avg };\n                })\n                .filter((d) => !isNaN(d.avg));\n        } else {\n            // FOOD: create a single “All Items” average\n            const valid = data.filter(\n                (d) => d[nutrient] !== undefined && !isNaN(d[nutrient])\n            );\n            const avg = d3.mean(valid, (d) => +d[nutrient]);\n            categoryAverages = [{ category: 'All Items', avg }];\n        }\n\n        // 2) Setup SVG (clear previous contents)\n        const svg = d3.select(ref.current);\n        svg.selectAll('*').remove();\n\n        const container = svg.node().parentElement;\n        const width = container.clientWidth;\n        const height = 300;\n\n        // 3) Scale bubble radius by avg value\n        const scale = d3\n            .scaleSqrt()\n            .domain([0, d3.max(categoryAverages, (d) => d.avg)])\n            .range([45, 70]);\n\n        // 4) Run a small force simulation to position bubbles\n        const simulation = d3\n            .forceSimulation(categoryAverages)\n            .force('x', d3.forceX(width / 2).strength(0.05))\n            .force('y', d3.forceY(height / 2 + 50).strength(0.1))\n            .force('collide', (d) => d3.forceCollide(scale(d.avg) + 4))\n            .stop();\n\n        for (let i = 0; i < 100; ++i) simulation.tick();\n\n        // 5) Draw each bubble + label\n        const g = svg\n            .selectAll('g')\n            .data(categoryAverages)\n            .enter()\n            .append('g')\n            .attr('transform', (d) => `translate(${d.x},${d.y})`);\n\n        g.append('circle')\n            .attr('r', (d) => scale(d.avg))\n            .attr('fill', '#00704A')\n            .attr('stroke', '#e76f51')\n            .attr('stroke-width', 1)\n            .attr('opacity', 0.85);\n\n        g.append('text')\n            .style('text-anchor', 'middle')\n            .style('font-size', (d) => `${Math.min(scale(d.avg) / 3, 12)}px`)\n            .style('fill', 'white')\n            .style('pointer-events', 'none')\n            .selectAll('tspan')\n            .data((d) => {\n                // Split the category name into two‐word chunks for multiline:\n                const words = d.category.split(' ');\n                const lines = [];\n                for (let i = 0; i < words.length; i += 2) {\n                    lines.push(words.slice(i, i + 2).join(' '));\n                }\n                return lines;\n            })\n            .enter()\n            .append('tspan')\n            .attr('x', 0)\n            .attr('dy', (d, i) => `${i === 0 ? 0 : 1.2}em`)\n            .text((d) => d);\n    }, [data, nutrient, category]);\n\n    // 6) Header text changes based on whether we’re showing drinks or food:\n    const headerText =\n        category === 'drinks'\n            ? `Average ${formatLabel(nutrient)} by Type of Drinks`\n            : `Average ${formatLabel(nutrient)} for All Food Items`;\n\n    return (\n        <div className=\"bubble-chart-container\">\n            <h3>{headerText}</h3>\n            <svg ref={ref}></svg>\n        </div>\n    );\n}\n\nexport default BubbleChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}