{"ast":null,"code":"var _jsxFileName = \"/Users/marlin/Desktop/Demeter/finalproject/starbucksnutritiondashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport NutrientSelector from './components/nutrientselector/NutrientSelector';\nimport RecommendedChart from './components/RecommendedChart';\nimport TopDrinks from './components/TopDrinks';\nimport DrinkInfo from './components/DrinkInfo';\nimport AvgNutrientChart from './components/AvgNutrientChart';\nimport CompareModal from './components/comparemodal/CompareModal';\nimport './styles/App.css';\nimport drinksData from './data/StarbucksDrinks.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [nutrient, setNutrient] = useState('calories');\n  const [selectedDrink, setSelectedDrink] = useState(null);\n  const [compareOpen, setCompareOpen] = useState(false);\n  const [allDrinksData, setAllDrinksData] = useState([]);\n  useEffect(() => {\n    d3.csv('/data/StarbucksDrinks.csv').then(data => {\n      const formatted = data.map(d => ({\n        ...d,\n        calories: +d.calories,\n        total_fat: +d.total_fat,\n        trans_fat: +d.trans_fat,\n        saturated_fat: +d.saturated_fat,\n        sodium: +d.sodium,\n        carbohydrates: +d.carbohydrates,\n        cholesterol: +d.cholesterol,\n        fiber: +d.fiber,\n        sugars: +d.sugars,\n        protein: +d.protein,\n        vitaminA: +d.vitaminA,\n        vitaminC: +d.vitaminC,\n        calcium: +d.calcium,\n        iron: +d.iron,\n        caffeine: +d.caffeine\n      }));\n      setAllDrinksData(formatted);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Starbucks Nutrition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NutrientSelector, {\n      nutrient: nutrient,\n      setNutrient: setNutrient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCompareOpen(true),\n        children: \"Compare Drinks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"window\",\n          children: /*#__PURE__*/_jsxDEV(RecommendedChart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"window\",\n          children: /*#__PURE__*/_jsxDEV(TopDrinks, {\n            nutrient: nutrient,\n            onDrinkSelect: setSelectedDrink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"window\",\n          children: /*#__PURE__*/_jsxDEV(DrinkInfo, {\n            drinkName: selectedDrink,\n            nutrient: nutrient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"window\",\n          children: /*#__PURE__*/_jsxDEV(AvgNutrientChart, {\n            onBubbleClick: setSelectedDrink,\n            nutrient: nutrient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), compareOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"compare-overlay\",\n      children: /*#__PURE__*/_jsxDEV(CompareModal, {\n        onClose: () => setCompareOpen(false),\n        nutrient: nutrient,\n        data: allDrinksData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: \"Note: Seasonal drinks are not included in this dashboard.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"17gLE0MviedwDLILSwnlHlrTp6k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","NutrientSelector","RecommendedChart","TopDrinks","DrinkInfo","AvgNutrientChart","CompareModal","drinksData","jsxDEV","_jsxDEV","App","_s","nutrient","setNutrient","selectedDrink","setSelectedDrink","compareOpen","setCompareOpen","allDrinksData","setAllDrinksData","useEffect","d3","csv","then","data","formatted","map","d","calories","total_fat","trans_fat","saturated_fat","sodium","carbohydrates","cholesterol","fiber","sugars","protein","vitaminA","vitaminC","calcium","iron","caffeine","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDrinkSelect","drinkName","onBubbleClick","onClose","_c","$RefreshReg$"],"sources":["/Users/marlin/Desktop/Demeter/finalproject/starbucksnutritiondashboard/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nimport NutrientSelector from './components/nutrientselector/NutrientSelector';\nimport RecommendedChart from './components/RecommendedChart';\nimport TopDrinks from './components/TopDrinks';\nimport DrinkInfo from './components/DrinkInfo';\nimport AvgNutrientChart from './components/AvgNutrientChart';\nimport CompareModal from './components/comparemodal/CompareModal';\n\nimport './styles/App.css';\n\nimport drinksData from './data/StarbucksDrinks.json';\n\nfunction App() {\n    const [nutrient, setNutrient] = useState('calories');\n    const [selectedDrink, setSelectedDrink] = useState(null);\n    const [compareOpen, setCompareOpen] = useState(false);\n    const [allDrinksData, setAllDrinksData] = useState([]);\n\n    useEffect(() => {\n        d3.csv('/data/StarbucksDrinks.csv').then(data => {\n            const formatted = data.map(d => ({\n                ...d,\n                calories: +d.calories,\n                total_fat: +d.total_fat,\n                trans_fat: +d.trans_fat,\n                saturated_fat: +d.saturated_fat,\n                sodium: +d.sodium,\n                carbohydrates: +d.carbohydrates,\n                cholesterol: +d.cholesterol,\n                fiber: +d.fiber,\n                sugars: +d.sugars,\n                protein: +d.protein,\n                vitaminA: +d.vitaminA,\n                vitaminC: +d.vitaminC,\n                calcium: +d.calcium,\n                iron: +d.iron,\n                caffeine: +d.caffeine\n            }));\n            setAllDrinksData(formatted);\n        });\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <div className=\"header\">\n                <h1>Starbucks Nutrition</h1>\n            </div>\n\n            <NutrientSelector nutrient={nutrient} setNutrient={setNutrient} />\n\n            <div className=\"toolbar\">\n                <button onClick={() => setCompareOpen(true)}>Compare Drinks</button>\n            </div>\n\n            <div className=\"dashboard\">\n                <div className=\"dashboard-top\">\n                    <div className=\"window\">\n                        <RecommendedChart />\n                    </div>\n                    <div className=\"window\">\n                        <TopDrinks nutrient={nutrient} onDrinkSelect={setSelectedDrink} />\n                    </div>\n                </div>\n\n                <div className=\"dashboard-bottom\">\n                    <div className=\"window\">\n                        <DrinkInfo drinkName={selectedDrink} nutrient={nutrient} />\n                    </div>\n                    <div className=\"window\">\n                        <AvgNutrientChart onBubbleClick={setSelectedDrink} nutrient={nutrient} />\n                    </div>\n                </div>\n            </div>\n\n\n            {compareOpen && (\n                <div className=\"compare-overlay\">\n                    <CompareModal\n                        onClose={() => setCompareOpen(false)}\n                        nutrient={nutrient}\n                        data={allDrinksData}\n                    />\n                </div>\n            )}\n\n            <footer className=\"footer\">\n                Note: Seasonal drinks are not included in this dashboard.\n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}