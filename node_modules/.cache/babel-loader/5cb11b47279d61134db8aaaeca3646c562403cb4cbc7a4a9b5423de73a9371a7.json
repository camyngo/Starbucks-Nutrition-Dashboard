{"ast":null,"code":"var _jsxFileName = \"/Users/marlin/Desktop/Demeter/finalproject/starbucksnutritiondashboard/src/components/recommendeditems/RecommendedItems.js\";\n// src/components/recommendeditems/RecommendedItems.js\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecommendedItems({\n  data,\n  nutrient\n}) {\n  if (!data || data.length === 0) return null;\n\n  // Build a human‐friendly label (e.g. \"Vitamin A\" or \"Calories\"):\n  const label = nutrient.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\n\n  // Determine the correct unit for each nutrient:\n  const unitMap = {\n    caffeine: 'mg',\n    vitaminA: '%',\n    vitaminC: '%',\n    calcium: '%',\n    iron: '%',\n    calories: ''\n  };\n  const unit = unitMap[nutrient] || 'g';\n\n  // Find the recommendation whose \"factor\" mentions this nutrient.\n  // We assume that in HealthyDrinkRecommendations.json each object’s\n  // \"factor\" field contains a phrase like \"Low Calories\" or \"High VitaminA\".\n  const selected = data.find(d => d.factor.toLowerCase().includes(nutrient.toLowerCase()));\n  if (!selected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drink-info\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"No recommendation available for \", label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  // \"selected.name\" is the drink title.  We also pull the numeric value\n  // from the matching nutrient field (e.g. selected.calories or selected.vitaminA).\n  const factorText = selected.factor;\n  const value = selected[nutrient];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drink-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Recommendation: \", selected.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [label, \": \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 26\n      }, this), \" \", unit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '13px',\n        color: '#777'\n      },\n      children: [\"Category: \", /*#__PURE__*/_jsxDEV(\"em\", {\n        children: selected.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this), \" | Size: \", selected.size]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '13px',\n        color: '#00704A'\n      },\n      children: [\"Health Factor: \", factorText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_c = RecommendedItems;\nexport default RecommendedItems;\nvar _c;\n$RefreshReg$(_c, \"RecommendedItems\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RecommendedItems","data","nutrient","length","label","replace","c","toUpperCase","unitMap","caffeine","vitaminA","vitaminC","calcium","iron","calories","unit","selected","find","d","factor","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","factorText","value","name","style","fontSize","color","category","size","_c","$RefreshReg$"],"sources":["/Users/marlin/Desktop/Demeter/finalproject/starbucksnutritiondashboard/src/components/recommendeditems/RecommendedItems.js"],"sourcesContent":["// src/components/recommendeditems/RecommendedItems.js\n\nimport React from 'react';\n\nfunction RecommendedItems({ data, nutrient }) {\n    if (!data || data.length === 0) return null;\n\n    // Build a human‐friendly label (e.g. \"Vitamin A\" or \"Calories\"):\n    const label = nutrient\n        .replace(/_/g, ' ')\n        .replace(/\\b\\w/g, (c) => c.toUpperCase());\n\n    // Determine the correct unit for each nutrient:\n    const unitMap = {\n        caffeine: 'mg',\n        vitaminA: '%',\n        vitaminC: '%',\n        calcium: '%',\n        iron: '%',\n        calories: '',\n    };\n    const unit = unitMap[nutrient] || 'g';\n\n    // Find the recommendation whose \"factor\" mentions this nutrient.\n    // We assume that in HealthyDrinkRecommendations.json each object’s\n    // \"factor\" field contains a phrase like \"Low Calories\" or \"High VitaminA\".\n    const selected = data.find((d) =>\n        d.factor.toLowerCase().includes(nutrient.toLowerCase())\n    );\n\n    if (!selected) {\n        return (\n            <div className=\"drink-info\">\n                <h3>No recommendation available for {label}</h3>\n            </div>\n        );\n    }\n\n    // \"selected.name\" is the drink title.  We also pull the numeric value\n    // from the matching nutrient field (e.g. selected.calories or selected.vitaminA).\n    const factorText = selected.factor;\n    const value = selected[nutrient];\n\n    return (\n        <div className=\"drink-info\">\n            <h3>\n                Recommendation: {selected.name}\n            </h3>\n            <p>\n                {label}: <strong>{value}</strong> {unit}\n            </p>\n            <p style={{ fontSize: '13px', color: '#777' }}>\n                Category: <em>{selected.category}</em> | Size: {selected.size}\n            </p>\n            <p style={{ fontSize: '13px', color: '#00704A' }}>\n                Health Factor: {factorText}\n            </p>\n        </div>\n    );\n}\n\nexport default RecommendedItems;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}