{"ast":null,"code":"var _jsxFileName = \"/Users/marlin/Desktop/Demeter/finalproject/starbucksnutritiondashboard/src/components/NutrientSelector.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NutrientSelector({\n  nutrient,\n  setNutrient\n}) {\n  const options = ['calories', 'total_fat', 'trans_fat', 'saturated_fat', 'sodium', 'carbohydrates', 'cholesterol', 'fiber', 'sugars', 'protein', 'vitaminA', 'vitaminC', 'calcium', 'iron', 'caffeine'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nutrient-selector\",\n    children: options.map(opt => /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"nutrient-option\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: opt,\n        checked: nutrient === opt,\n        onChange: e => setNutrient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this), opt.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())]\n    }, opt, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = NutrientSelector;\nexport default NutrientSelector;\nvar _c;\n$RefreshReg$(_c, \"NutrientSelector\");","map":{"version":3,"names":["NutrientSelector","nutrient","setNutrient","options","_jsxDEV","className","children","map","opt","type","value","checked","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","replace","l","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/marlin/Desktop/Demeter/finalproject/starbucksnutritiondashboard/src/components/NutrientSelector.js"],"sourcesContent":["function NutrientSelector({ nutrient, setNutrient }) {\n    const options = [\n        'calories', 'total_fat', 'trans_fat', 'saturated_fat',\n        'sodium', 'carbohydrates', 'cholesterol', 'fiber',\n        'sugars', 'protein', 'vitaminA', 'vitaminC', 'calcium',\n        'iron', 'caffeine'\n    ];\n\n    return (\n        <div className=\"nutrient-selector\">\n            {options.map((opt) => (\n                <label key={opt} className=\"nutrient-option\">\n                    <input\n                        type=\"radio\"\n                        value={opt}\n                        checked={nutrient === opt}\n                        onChange={(e) => setNutrient(e.target.value)}\n                    />\n                    {opt.replace(/_/g, ' ').replace(/\\b\\w/g, (l) => l.toUpperCase())}\n                </label>\n            ))}\n        </div>\n    );\n}\n\nexport default NutrientSelector;\n"],"mappings":";;AAAA,SAASA,gBAAgBA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EACjD,MAAMC,OAAO,GAAG,CACZ,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,eAAe,EACrD,QAAQ,EAAE,eAAe,EAAE,aAAa,EAAE,OAAO,EACjD,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EACtD,MAAM,EAAE,UAAU,CACrB;EAED,oBACIC,OAAA;IAAKC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC7BH,OAAO,CAACI,GAAG,CAAEC,GAAG,iBACbJ,OAAA;MAAiBC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBACxCF,OAAA;QACIK,IAAI,EAAC,OAAO;QACZC,KAAK,EAAEF,GAAI;QACXG,OAAO,EAAEV,QAAQ,KAAKO,GAAI;QAC1BI,QAAQ,EAAGC,CAAC,IAAKX,WAAW,CAACW,CAAC,CAACC,MAAM,CAACJ,KAAK;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,EACDV,GAAG,CAACW,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,OAAO,EAAGC,CAAC,IAAKA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;IAAA,GAPxDb,GAAG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQR,CACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACI,EAAA,GAvBQtB,gBAAgB;AAyBzB,eAAeA,gBAAgB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}